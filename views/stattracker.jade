extends layout

block inlineScripts
	script.

		var hasItChanged = function(row, stat, _class) {
			var old = row.find('.' + _class).text();
			if(!old || old != stat) {
				row.find('.cat_' + _class).text(stat);
				row.find('.cat_' + _class).effect('highlight', { color : 'green' }, 1000)
			}
		}

		var getStats = function() {
			$.get("/stattracker/update/" + team.teamId, function(players) {
				$('[class^="total_"]').text(0);
				var obpNumerator = 0;
				var obpDenominator = 0;
				players.forEach(function(p) {
					console.log(p.linescore);
					var stats = p.dailyStats;
					var row = $('[id^="player_' + p._id + '"]');
					if(stats) {
						var _obpNumerator = (stats.h + stats.bb + stats.hbp);
						var _obpDenominator = (stats.ab + stats.bb + stats.hbp + stats.sf);
						obpNumerator += _obpNumerator;
						obpDenominator += _obpDenominator;
						stats.obp = _obpNumerator / _obpDenominator;
						var formatString = ".000";
						if(stats.obp == 1) {
							formatString = "0.000";
						}
						stats.obp = numeral(stats.obp).format(formatString);
						var pitcherR = stats.r + "/" + stats.er;
						stats.whip = (stats.h + stats.bb) / stats.s_ip;
						stats.whip = isFinite(stats.whip) ? numeral(stats.whip).format('0.00') : 0;
						var sacs = parseInt(stats.sac) + parseInt(stats.sf);
						var sbs = stats.sb + "/" + stats.cs;
						hasItChanged(row, stats.obp, 'obp');
						hasItChanged(row, stats.r, 'br');
						hasItChanged(row, pitcherR, 'pr');
						hasItChanged(row, stats.w, 'w');
						hasItChanged(row, stats.sv, 'sv');
						hasItChanged(row, stats.s_ip, 'ip');
						hasItChanged(row, stats.era, 'era');
						hasItChanged(row, stats.whip, 'whip');
						hasItChanged(row, stats.h2b, 'h2b');
						hasItChanged(row, stats.h3b, 'h3b');
						hasItChanged(row, stats.bb, 'bb');
						hasItChanged(row, stats.hbp, 'hbp');
						hasItChanged(row, stats.so, 'so');
						hasItChanged(row, sacs, 'sac');
						hasItChanged(row, stats.ab, 'ab');
						hasItChanged(row, stats.hr, 'hr');
						hasItChanged(row, stats.rbi, 'rbi');
						hasItChanged(row, sbs, 'sb');
						hasItChanged(row, stats.go, 'go');
						hasItChanged(row, stats.ao, 'ao');
						hasItChanged(row, stats.np, 'np');
						hasItChanged(row, stats.h, 'h');
						hasItChanged(row, stats.whip, 'whip');
					}
				});
				var teamObp = obpNumerator / obpDenominator;
				var formatString = ".000";
				if(teamObp == 1) {
					formatString = "0.000";
				}
				teamObp = numeral(teamObp).format(formatString);
				$('.total_obp').text(teamObp);
				
				var categories = [ 'br', 'pr', 'w', 'sv', 'ip', 'era', 'whip', 'h2b', 'h3b', 'bb', 'hbp', 'so', 'sac', 'ab',
								'hr', 'rbi', 'sb', 'go', 'ao', 'np', 'h', 'whip' ];
				categories.forEach(function(c) {
					var total = 0;
					$('.cat_' + c).each(function(ix, o) {
						var num = parseInt($(o).text());
						if(!isNaN(num)) {
							total += num;
						}
					});
					$('.total_' + c).text(total);
				});
			});
		}

		var getLinescore = function(gameday) {
			$.get("/StatTracker/linescore/" + gameday, function(linescore) {
				var gameText;
				if(linescore.inning) {
					$('.awayScore[game="' + gameday + '"]').text(linescore.away_team_runs);
					$('.homeScore[game="' + gameday + '"]').text(linescore.home_team_runs);
				} else {
					//gameText = linescore.away_name_abbrev + " @ " 
					//	+ linescore.home_name_abbrev + ", " + linescore.time;
				}
				if(linescore.inning_state) {
					$('.gameTime[game="' + gameday + '"]').find('a').text(linescore.inning);
					$('.gameTime[game="' + gameday + '"]').find('a').addClass("inningState_" + linescore.inning_state);
				} else if(linescore.inning) {
					gameText = "Final";
				}
				var batterId;
				if(linescore.current_batter) {
					batterId = linescore.current_batter.id;
					if($('[player_id="' + batterId + '"]').find('.playerNote').text() != 'At Bat') {
						$('[player_id="' + batterId + '"]').effect('highlight', { color : 'green' }, 5000);
						$('[player_id="' + batterId + '"]').find('.playerNote').text('At Bat');
					}
				}
				if(linescore.current_ondeck) {
					batterId = linescore.current_ondeck.id;
					if($('[player_id="' + batterId + '"]').find('.playerNote').text() != 'On Deck') {
						$('[player_id="' + batterId + '"]').effect('highlight', { color : 'green' }, 5000);
						$('[player_id="' + batterId + '"]').find('.playerNote').text('On Deck');
					}
				}
				if(linescore.current_inhole) {
					batterId = linescore.current_inhole.id;
					if($('[player_id="' + batterId + '"]').find('.playerNote').text() != 'In the Hole') {
						$('[player_id="' + batterId + '"]').effect('highlight', { color : 'green' }, 5000);
						$('[player_id="' + batterId + '"]').find('.playerNote').text('In the Hole');
					}
				}
			});
		}

		$(document).ready(function() {
			getStats();
			setInterval(function() {
				getStats();
			}, 120000);

			games.forEach(function(g) {
				getLinescore(g.gameday);
			});
			setInterval(function() {
				games.forEach(function(g) {
					getLinescore(g.gameday);
				});
			}, 60000);
		});

block content

	mixin batter(player, game)
		-var now = new Date();
		-now.setHours(now.getHours() - 12)
		-if(game && now >= game.timeDate)
			td.cat_ab
			td.cat_h
			td.cat_h2b
			td.cat_h3b
			td.cat_hr
			td.cat_br
			td.cat_rbi
			td.cat_bb
			td.cat_hbp
			td.cat_so
			td.cat_sac
			td.cat_obp
			td.cat_sb
			td
				span.cat_go
				= "/"
				span.cat_ao
		-else
			-var count = 0;
			-while(count < 14) {
				td
				-count++;
			-}

	mixin pitcher(player, game)
		-var now = new Date();
		-now.setHours(now.getHours() - 12)
		-if(game && now >= game.timeDate)
			td.cat_ip
			td.cat_h
			td.cat_np
			td.cat_bb
			td.cat_hbp
			td.cat_whip
			td.cat_so
			td.cat_goao
			td.cat_hr
			td.cat_pr
			td.cat_era
			td.cat_w
			td.cat_sv
		-else
			-var count = 0;
			-while(count < 13) {
				td
				-count++;
			-}
	
	mixin miniPlayer(position, posText, minCount)
		-var count = 0;
		-minCount = minCount != undefined ? minCount : 1;
		-each player in players[position]
			-var game = undefined;
			-var game2 = undefined;
			-each g in games
				-if(player.team_id == g.awayTeamId || player.team_id == g.homeTeamId) {
					-if(game) {
						-game2 = g;
					-} else {
						-game = g;
					-}
				-}
			tr(id="player_" + player._id player_id=player.player_id)
				td(style="text-align:left")= posText
				td(style="text-align:left")= player.name_display_first_last
				-if(game)
					-var gameId = game2 ? game.gameday + ";" + game2.gameday : game.gameday;
					td= game.awayNameAbbrev
					td.awayScore(game=gameId)
					td @
					td= game.homeNameAbbrev
					td.homeScore(game=gameId)
					td.gameTime(style="text-align:center" game=gameId)
						a.hiddenLink(target="_blank" href="http://mlb.mlb.com/mlb/gameday/index.jsp?gid=" + game.gameday)
					td
						a.hiddenLink(target="_blank" href="/stattracker/linescore/" + game.gameday) admin
				-else
					td
				td.playerNote
				-if(player.primary_position != 1)
					mixin batter(player, game)
				-else
					mixin pitcher(player, game)
			-count++;
		-while(count < minCount) {
			tr
				td= posText
				td -
			-count++;
		-}

	div
		span#pageTitle StatTracker
	div.widget
		table.statsTable(id='players_' style="width:100%;border-collapse:collapse;" class="hoverable")
			thead
				th.position Position
				th(style="text-align:left;width:15%") Name
				th(style="text-align:center;width:30%;" colspan=7) Game
				th(style="width:8%")
				th.category AB
				th.category H
				th.category 2B
				th.category 3B
				th.category HR
				th.category R
				th.category RBI
				th.category BB
				th.category HBP
				th.category K
				th.category SAC
				th.category OBP
				th.category SB/CS
				th.category GO/AO

			tbody
				mixin miniPlayer('catchers', 'C', 2)
				mixin miniPlayer('first_base', '1B')
				mixin miniPlayer('second_base', '2B')
				mixin miniPlayer('third_base', '3B')
				mixin miniPlayer('shortstop', 'SS')
				mixin miniPlayer('middle_infield', '2B/SS')
				mixin miniPlayer('corner_infield', '1B/3B')
				mixin miniPlayer('outfielders', 'OF', 5)
				mixin miniPlayer('utility', 'U')
				//mixin miniPlayer('dl', 'DL', 0)
				mixin miniPlayer('bench', 'BENCH', 0)
				tr(style="border-top:1px solid white")
					td
					td(style="text-align:center") Totals
					td(colspan=6)
					td
					td
					td.total_ab
					td.total_h
					td.total_h2b
					td.total_h3b
					td.total_hr
					td.total_br
					td.total_rbi
					td.total_bb
					td.total_hbp
					td.total_so
					td.total_sac
					td.total_obp
					td.total_sb
					td
						span.total_go
						= "/"
						span.total_ao
	div.widget
		table.statsTable(id='players_' style="width:100%;border-collapse:collapse;" class="hoverable")
			thead
				th.position Position
				th(style="text-align:left;width:15%") Name
				th(style="text-align:center;width:30%" colspan=7) Game
				th
				th.category IP
				th.category H
				th.category P
				th.category BB
				th.category HBP
				th.category WHIP
				th.category K
				th.category GO/AO
				th.category HR
				th.category R/ER
				th.category ERA
				th.category W
				th.category SV

			tbody
				mixin miniPlayer('pitchers', 'P', 9)

	| <script type="text/javascript" >
	| var team = !{JSON.stringify(team)};
	| var games = !{JSON.stringify(games)};
	| </script>