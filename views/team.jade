extends layout

block inlineScripts
	script.
		var needDailyStats = true;

		var validateForm = function(form) {
			var checkbox = $(form).parent().find('input:checked');
			if(checkbox.length == 1) {
				return true;
			} else {
				alert("You must select the player as a keeper before locking them up");
				return false;
			}
		}
		var changeTotal = function(checkbox) {
			var change = parseInt(checkbox.value);
			if(!checkbox.checked) {
				change *= -1;
			}
			var curBudget = parseInt($('#draftBudget').text().split(":")[1]);
			curBudget += (change * -1);
			if($('.player[minor_leaguer="true"]').find('input:checked').length > 10) {
				checkbox.checked = false;
				alert("Issue: You already have 10 or more minor leaguers. Please fix before continuing.");
			} else if($('.player[minor_leaguer="false"]').find('input:checked').length > 10) {
				checkbox.checked = false;
				alert("Issue: You already have 10 or more major league keepers. Please fix before continuing.");
			} else if(curBudget < 0) {
				checkbox.checked = false;
				alert("You may not exceed your own budget");
			} else {
				$('#draftBudget').text("2014 Draft Budget: " + curBudget);
			}
		};
		var saveChanges = function(teamId) {
			if($('.player[minor_leaguer="true"]').find('input:checked').length > 10) {
				alert("You cannot keep more than 10 minor leaguers. " + 
					"Deselect one or click 'Keep as major leaguer' to keep the player for a starting salary of 3 units");
				return;
			}
			if($('.player[minor_leaguer="false"]').find('input:checked').length > 10) {
				alert("You cannot keep more than 10 major leaguers. " +
					"Deselect one and try again");
				return;
			}
			var payload = { team: teamId, total : 0, keepers: [], nonkeepers: [] };
			payload.total = parseInt($('#draftBudget').text().split(":")[1]);
			var players = $('.player');
			for(var i = 0; i < players.length; i++) {
				var pid = players.eq(i).attr('player_id');
				if(players.eq(i).find("input[type=checkbox]:checked").length != 0) {
					payload.keepers.push(pid);
				} else {
					payload.nonkeepers.push(pid);
				}
			}
			console.log(payload);
			$.post("/gm/keeper", payload, function(result) {
				if(result == "worked") {
					alert('Your preferences have been saved');
				}
			});
		};

		function expandMinorLeaguer(link, _id) {
			var row = $('#ml_actions_' + _id);
			if(row.css('display') == 'none') {
				$(link).text('-');
				$('#ml_actions_' + _id).css('display','table-row');
			} else {
				$(link).text('+');
				$('#ml_actions_' + _id).css('display','none');
			}
		}

		function showInfo() {
			hideAllTabs();

			$('#showInfoButton').css('color','lightblue');

			$('.team').show();

			setTabCookie('1');
		}

		function showStats() {
			hideAllTabs();

			$('#showStatsButton').css('color','lightblue');

			$('.seasonStatsTable').show();

			setTabCookie('2');
		}

		function showDailyStats() {
			hideAllTabs();

			if(needDailyStats) {
				needDailyStats = false;
				$.get("/api/stats/update/daily/" + team.teamId, function(response) {
					$('.dailyStats').html(response.html);
				});
			}

			$('#showDailyStatsButton').css('color','lightblue');
			
			$('.dailyStats').show();

			setTabCookie('3');
		}

		function showActiveStats() {
			hideAllTabs();

			$('#showActiveStatsButton').css('color','lightblue');

			$('.activeStats').show();

			setTabCookie('4');
		}

		function showRosterMoves() {
			hideAllTabs();

			$('#showRosterMovesButton').css('color','lightblue');

			$('.rosterMoves').show();

			setTabCookie('5');
		}

		function hideAllTabs() {
			$('.showButton').css('color', 'white');
			$('.team').hide();
			$('.seasonStatsTable').hide();
			$('.dailyStats').hide();
			$('.activeStats').hide();
			$('.rosterMoves').hide();
		}

		function setTabCookie(tab) {
			$.cookie('teamTab', tab, { expires: 1 });
		}

		function expandMinors() {
			$('#teamWidget').toggle('fade', { complete : function() {
					$('#left').animate({width:'0%'}); $('#right').animate({width:'100%'}, { complete : function() {
							$('#minorLeaguersWidget .default').hide();
							$('#minorLeaguersWidget .extra').toggle('fade');
						}
					});	
				}
			});
			$('#financesWidget').toggle('fade'); 
			$('#draftPicksWidget').toggle('fade'); 
			
			$('#minorsContract').show();
			$('#minorsExpand').hide();
		}

		var financesExpand = function() {
			$('#draftPicksWidget').toggle('fade'); 
			$('#teamWidget').toggle('fade');
			$('#minorLeaguersWidget').toggle('fade');

			$('#left').animate({width:'0%'}); $('#right').animate({width:'100%'}); $('#financesWidget').parent().animate({width:'100%'}, { complete : getChart });
		}

		var getChart = function(year) {
			$('#financesGraph').css('display', 'inline-block');	
			$("#financesGraph").html("<img src='/public/ajax-loader.gif' />");
			year = year ? year : 2015;
			console.log(year);
			$.get("/api/finances?year=" + year, function(data) {
				console.log(data);
				var teamNames = [];
				var mlb = [];
				var fa = [];
				for(var team in data) {
					teamNames.push(teamHash[team].team);
					for(var i = 0; i < data[team].length; i++) {
						var cash = data[team][i];
						if(cash.year == year) {
							if(cash.type == 'MLB') {
								mlb.push(cash.value);
							} else if(cash.type == 'FA') {
								fa.push(cash.value);
							}
						}
					}
				}
				$('#financesGraph').highcharts({
					chart: {
						type: 'column'
					},
					title: {
						text: year + ' Finances By Team'
					},
					subtitle: {
						text: 'Click the years at left to change'
					},
					xAxis: {
						categories: teamNames
					},
					yAxis: {
						min: 0,
						title: {
							text: 'Dollars'
						}
					},
					tooltip: {
						headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
						pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
							'<td style="padding:0"><b> ${point.y}</b></td></tr>',
						footerFormat: '</table>',
						shared: true,
						useHTML: true
					},
					plotOptions: {
						column: {
							pointPadding: 0.2,
							borderWidth: 0
						}
					},
					series: [{
						name: 'MLB ' + year,
						data: mlb
					}, {
						name: 'FA ' + year,
						data: fa
					}]
				});
			});
		}

		function contractMinors() {
			$('.extraRow').hide();
			$('.extra a').text('+');

			$('#minorLeaguersWidget .extra').toggle('fade').promise().done(function(x) {
				$('#minorLeaguersWidget .default').show();

			$('#right').animate({width:'42%'});
				$('#left').animate({width:'58%'}, { queue : false, complete : function() {
					$('#teamWidget').toggle('fade');
					$('#financesWidget').toggle('fade');
					$('#draftPicksWidget').toggle('fade'); 
				}});
			});
			
			//$('#right').animate({width:'42%'}); $('#left').animate({width:'58%'}, { complete : function() { 
			//		$('#teamWidget').toggle('fade'); 
			//		$('#financesWidget').toggle('fade');
			//		$('#draftPicksWidget').toggle('fade'); 
			//	}
			//});

			$('#minorsContract').hide();
			$('#minorsExpand').show();
		}

		function getExtraMinorLeagueInfo() {
			$.get("/api/team/milb/" + team.teamId, function(response) {
				var playerHash = response.milbInfo;
				for(var _id in playerHash) {
					var player = playerHash[_id];
					if(player.bio && player.bio.leagueName) {
						$('[_id="' + _id + '"] .extra.level').text(player.bio.leagueName);
						if(player.stats) {
							if(player.bio.primary_position != "P") {
								$('[_id="' + _id + '"] .extra.stat_ab').text(player.stats.ab);
								$('[_id="' + _id + '"] .extra.stat_hr').text(player.stats.hr);
								$('[_id="' + _id + '"] .extra.stat_rbi').text(player.stats.rbi);
								$('[_id="' + _id + '"] .extra.stat_r').text(player.stats.r);
								$('[_id="' + _id + '"] .extra.stat_sb').text(player.stats.sb);
								$('[_id="' + _id + '"] .extra.stat_obp').text(player.stats.obp);
							} else {
								$('[_id="' + _id + '"] .extra.stat_w').text(player.stats.w);
								$('[_id="' + _id + '"] .extra.stat_k').text(player.stats.so);
								$('[_id="' + _id + '"] .extra.stat_whip').text(player.stats.whip);
								$('[_id="' + _id + '"] .extra.stat_era').text(player.stats.era);
								$('[_id="' + _id + '"] .extra.stat_sv').text(player.stats.sv);
								$('[_id="' + _id + '"] .extra.stat_ip').text(player.stats.ip);
							}
						}
					}
				}
			});
		}

		$(function() {
			$('.dailyStats').html("<img src='/public/ajax-loader.gif' />");

			$('.activeStats').html("<img src='/public/ajax-loader.gif' />");
			$.get("/api/stats/activeTeam/" + team.teamId, function(response) {
				$('.activeStats').html(response.html);

				$('#batters_activeStats').tablesorter({
					sortInitialOrder: 'desc'
				});
				$('#pitchers_activeStats').tablesorter({
					sortInitialOrder: 'desc'
				});
			});

			var selection = $.cookie('teamTab');
			if(!selection || selection == 1) {
				showInfo();
			} else if(selection == 2) {
				showStats();
			} else if(selection == 3) {
				showDailyStats();
			} else if(selection == 4) {
				showActiveStats();
			} else if(selection == 5) {
				if(isTeamOwner) {
					showRosterMoves();
				} else {
					showInfo();
				}
			}

			$('#minorsContract').hide();
			$('#minorLeaguersWidget .extra').hide();

			getExtraMinorLeagueInfo();
		});

block content
	include tables/activeRoster
	include tables/keeperRoster
	include partials/draftPicks
	include partials/cash
	include partials/teamLink
	include tables/minorLeaguers
	include tables/seasonStats
	include tables/rosterMoves

	mixin vulture(array, header, isInbound)
		-if(array.length > 0)
			p= header
			table
				thead
					th Player
					-if(isInbound)
						th Vulturing Team
					-else
						th Player's Team
					-if(!isInbound)
						th Giving Up
					th Deadline
				tbody
					-each v in array
						tr
							td
								a.hiddenLink(href="/player/" + v._id)= v.name_display_first_last
							td
								-if(isInbound)
									mixin teamLink(teamHash[v.vulture.vulture_team], false)
								-else
									mixin teamLink(teamHash[v.history[0].fantasy_team], false)
							-if(!isInbound)
								td
									a.hiddenLink(href="/player/" + v.givingUpPlayer._id)= v.givingUpPlayer.name_display_first_last
							td= moment(v.vulture.deadline).calendar()

	section(id="top")
		div
			span#pageTitle= team.fullName
			span.unselectable(style="padding-left:10px")
				-if(owners.length > 1)
					span(title=owners[0].email)= owners[0].firstName + " " + owners[0].lastName
					span(title=owners[1].email)= ", " + owners[1].firstName + " " + owners[1].lastName
				-else
					= owners[0].firstName + " " + owners[0].lastName
			-if(user && user.team != team.teamId && (config.isTradingOn || user.role == 'admin'))
				span.unselectable(style="padding-left:20px;") |
				span(style="padding-left:20px")
					a.hiddenLink(href="/trade/" + team.teamId) Propose Trade
			span.unselectable(style="padding-left:20px") |
			span(style="padding-left:20px")
				a.hiddenLink(target="_blank" href="http://games.espn.go.com/flb/clubhouse?leagueId=216011&teamId=" + team.teamId + "&seasonId=2014")
					= "ESPN Team Page"
			span.unselectable(style="padding-left:20px;") |
			span(style="padding-left:20px")
				i
					span.unselectable Previous Rosters: 
					a.hiddenLink(style="padding-left:15px" href="/team/" + team.teamId + "/2013") 2013
	div(style="position:relative")
		div#left(style="width:58%;display:inline-block;vertical-align:top;position:absolute")
			-var nextYear = parseInt(config.year) + 1
			-var displayConfig = {};

			-displayConfig.showKeeperColumns = config.isKeeperPeriod;
			-displayConfig.showFutureSalary = config.isKeeperPeriod;
			-displayConfig.showStatus = !config.isKeeperPeriod && !config.isOffseason;
			-displayConfig.showDemoteButton = false;

			div(style="width:100%")
				div.widget#teamWidget
					-if(config.isOffseason)
						p(style="margin-top:8px;")
						span(style="font-size:1.5em;font-weight:300") Active Roster
						a.showButton#showInfoButton(onclick="showInfo()" style="padding-left:20px;cursor:pointer;display:inline") Player Info
						span.unselectable(style="padding-left:20px") |
						a.showButton#showStatsButton(onclick="showStats()" style="padding-left:20px;cursor:pointer") Season Stats
						div.team
							mixin activeRoster(players, config, displayConfig)
						div.seasonStatsTable
							mixin seasonStats(players)
					-else
						p(style="margin-top:8px;")
							span(style="font-size:1.5em;font-weight:300") Active Roster
							a.showButton#showInfoButton(onclick="showInfo()" style="padding-left:20px;cursor:pointer;display:inline") Player Info
							span.unselectable(style="padding-left:20px") |
							a.showButton#showStatsButton(onclick="showStats()" style="padding-left:20px;cursor:pointer") Season Stats
							span.unselectable(style="padding-left:20px") |
							a.showButton#showDailyStatsButton(onclick="showDailyStats()" style="padding-left:20px;cursor:pointer") Today's Stats
							span.unselectable(style="padding-left:20px") |
							a.showButton#showActiveStatsButton(onclick="showActiveStats()" style="padding-left:20px;cursor:pointer") Active Stats
							-if(user && user.team == team.teamId)
								span.unselectable(style="padding-left:20px") |
								a.showButton#showRosterMovesButton(onclick="showRosterMoves()" style="padding-left:20px;cursor:pointer") Roster Moves
						-if(!config.isKeeperPeriod || config.isTeamOwner)
							div.team
								mixin activeRoster(players, config, displayConfig)
							div.seasonStatsTable
								mixin seasonStats(players)
							div.dailyStats(style="display:none")
							div.activeStats(style="display:none")
							-if(user && user.team == team.teamId)
								div.rosterMoves(style="display:none")
									mixin rosterMoves(players, user && user.team == team.teamId)

			-if((in_vultures && in_vultures.length > 0) || (out_vultures && out_vultures.length > 0))
				div.widget
					h2 Vultures
					mixin vulture(in_vultures, "Vultures on " + team.fullName + "'s Players", true)
					mixin vulture(out_vultures, "Vultures made by " + team.fullName, false)

		div#right(style="width:42%;display:inline-block;vertical-align:top;position:absolute;right:0")
			div(style="width:100%")
				div.widget#minorLeaguersWidget
					p(style="margin-top:8px;")
						span(style="font-size:1.5em;font-weight:300;") Minor Leaguers
						span#minorsExpand(style="padding-left:20px;cursor:pointer;" onclick="expandMinors()") More...
						span#minorsContract(style="padding-left:20px;cursor:pointer;" onclick="contractMinors()") Less...
					mixin minorLeaguers(players, team, config, displayConfig, undefined, user && user.team == team.teamId)
					p
						i.smallNote * Vulture Threshhold: 150 AB / 50 IP

			div(style="width:50%;display:inline-block;vertical-align:top")
				div.widget#financesWidget
					p(style="margin-top:8px;")
						span(style="font-size:1.5em;font-weight:300;") Finances
						span#financesExpand(style="padding-left:20px;cursor:pointer;" onclick="financesExpand()") More...
						//span#financesContract(style="padding-left:20px;cursor:pointer;" onclick="contractMinors()") Less...
					div(style="width:22%;display:inline-block;vertical-align:top")
						mixin cash(team, cash, config)
					div#financesGraph(style="display:none;width:78%;vertical-align:top;border-radius: 13px;")
			div(style="width:50%;display:inline-block;vertical-align:top")
				div.widget#draftPicksWidget
					h2 Minor League Draft Picks
					mixin draftPicks(team, picks, teamHash)

		| <script type="text/javascript" >
		| var isTeamOwner = !{user != undefined && user.team == team.teamId};
		| var team = !{JSON.stringify(team)};
		| var teamHash = !{JSON.stringify(teamHash)};
		| </script>