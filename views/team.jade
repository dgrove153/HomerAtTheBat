extends layout

block inlineScripts
	script.
		var validateForm = function(form) {
			var checkbox = $(form).parent().find('input:checked');
			if(checkbox.length == 1) {
				return true;
			} else {
				alert("You must select the player as a keeper before locking them up");
				return false;
			}
		}
		var changeTotal = function(checkbox) {
			var change = parseInt(checkbox.value);
			if(!checkbox.checked) {
				change *= -1;
			}
			var curBudget = parseInt($('#draftBudget').text().split(":")[1]);
			curBudget += (change * -1);
			if($('.player[minor_leaguer="true"]').find('input:checked').length > 10) {
				checkbox.checked = false;
				alert("Issue: You already have 10 or more minor leaguers. Please fix before continuing.");
			} else if($('.player[minor_leaguer="false"]').find('input:checked').length > 10) {
				checkbox.checked = false;
				alert("Issue: You already have 10 or more major league keepers. Please fix before continuing.");
			} else if(curBudget < 0) {
				checkbox.checked = false;
				alert("You may not exceed your own budget");
			} else {
				$('#draftBudget').text("2014 Draft Budget: " + curBudget);
			}
		};
		var saveChanges = function(teamId) {
			if($('.player[minor_leaguer="true"]').find('input:checked').length > 10) {
				alert("You cannot keep more than 10 minor leaguers. " + 
					"Deselect one or click 'Keep as major leaguer' to keep the player for a starting salary of 3 units");
				return;
			}
			if($('.player[minor_leaguer="false"]').find('input:checked').length > 10) {
				alert("You cannot keep more than 10 major leaguers. " +
					"Deselect one and try again");
				return;
			}
			var payload = { team: teamId, total : 0, keepers: [], nonkeepers: [] };
			payload.total = parseInt($('#draftBudget').text().split(":")[1]);
			var players = $('.player');
			for(var i = 0; i < players.length; i++) {
				var pid = players.eq(i).attr('player_id');
				if(players.eq(i).find("input[type=checkbox]:checked").length != 0) {
					payload.keepers.push(pid);
				} else {
					payload.nonkeepers.push(pid);
				}
			}
			console.log(payload);
			$.post("/gm/keeper", payload, function(result) {
				if(result == "worked") {
					alert('Your preferences have been saved');
				}
			});
		};

block content
	include partials/team
	include partials/draftPicks
	include partials/cash
	include partials/teamLink
	include partials/minorLeaguers

	mixin vulture(array, header, isInbound)
		-if(array.length > 0)
			p= header
			table
				thead
					th Player
					-if(isInbound)
						th Vulturing Team
					-else
						th Player's Team
					-if(!isInbound)
						th Giving Up
					th Deadline
				tbody
					-each v in array
						tr
							td
								a.hiddenLink(href="/player/" + v._id)= v.name_display_first_last
							td
								-if(isInbound)
									mixin teamLink(teamHash[v.vulture.vulture_team], false)
								-else
									mixin teamLink(teamHash[v.history[0].fantasy_team], false)
							-if(!isInbound)
								td
									a.hiddenLink(href="/player/" + v.givingUpPlayer._id)= v.givingUpPlayer.name_display_first_last
							td= moment(v.vulture.deadline).calendar()

	section(id="top")
		div
			span#pageTitle= team.fullName
			span(style="padding-left:10px")
				-if(owners.length > 1)
					span(title=owners[0].email)= owners[0].firstName + " " + owners[0].lastName
					span(title=owners[1].email)= ", " + owners[1].firstName + " " + owners[1].lastName
				-else
					= owners[0].firstName + " " + owners[0].lastName
			span(style="padding-left:20px")
				i
					| Previous Rosters: 
					a(style="padding-left:15px" href="/team/" + team.teamId + "/2013") 2013

	section(id="left" style="width:65%")
		-var nextYear = parseInt(config.year) + 1
		-var displayConfig = {};

		-displayConfig.showKeeperColumns = config.isKeeperPeriod;
		-displayConfig.showFutureSalary = config.isKeeperPeriod;
		-displayConfig.showStatus = !config.isKeeperPeriod && !config.isOffseason;
		-displayConfig.showDemoteButton = false;

		div.widget
			h2 Minor Leaguers
			mixin minorLeaguers(players, team, config, displayConfig)
			p
				i.smallNote * Vulture Threshhold: 150 AB / 50 IP

		div.widget
			-if(config.isKeeperPeriod && config.isTeamOwner)
				h3= "Select your keepers from " + config.year + " roster"
				p#draftBudget(style="display:inline;font-size:20px;margin-right:40px")=nextYear + ' Draft Budget: ' + draftCash.value
				
				-if(config.isTeamOwner)
					input.saveChanges(style="line-height:50%" type="button" value="Save Keeper Selections" onclick="saveChanges('" + team.teamId + "')")

			h2 Active Roster
			-if(!config.isKeeperPeriod || config.isTeamOwner)
				mixin team(players, config, displayConfig)
			-else
				p= "Check back after the keeper deadline for " + nextYear + " roster"

		div.widget
			-if((in_vultures && in_vultures.length > 0) || (out_vultures && out_vultures.length > 0))
				h2 Vultures
				mixin vulture(in_vultures, "Vultures on " + team.fullName + "'s Players", true)
				mixin vulture(out_vultures, "Vultures made by " + team.fullName, false)

	section(id="right")
		div.widget
			h2 Actions
			-if(user && user.team != team.teamId && (config.isTradingOn || user.role == 'admin'))
				a(href="/trade/" + team.teamId) Propose Trade
				br
			a(target="_blank" href="http://games.espn.go.com/flb/clubhouse?leagueId=216011&teamId=" + team.teamId + "&seasonId=2014")
				| Go To ESPN Team Page
		div.widget
			h2 Finances
			mixin cash(team, cash, config)

		div.widget
			h2 Minor League Draft Picks
			mixin draftPicks(team, picks, teamHash)