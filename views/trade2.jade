extends layout
block inlineScripts
	script.
		var tradePayload = { items : [], proposedBy : undefined, proposedTo : undefined };

		var submitTrade = function(fromTeam, toTeam) {
			tradePayload.proposedBy = fromTeam;
			tradePayload.proposedTo = toTeam;
			var tradeJson = JSON.stringify(tradePayload);

			var form = document.createElement("form");
			form.setAttribute("method", "POST");
			form.setAttribute("action", "/trade/submit");

			var hiddenField = document.createElement("input");
			hiddenField.setAttribute("type", "hidden");
			hiddenField.setAttribute("name", "trade");
			hiddenField.setAttribute("value", tradeJson);
			
			form.appendChild(hiddenField);
			document.body.appendChild(form);

			var valid = true;
			tradePayload.items.forEach(function(obj) {
				if(obj.itemType == 'CASH') {
					var amount = $('#' + obj.id).find('input').val();
					if(!amount.length) {
						alert("You must enter a value to trade cash");
						valid = false;
						return false;
					} else {
						obj.amount = amount;
					}
				}
			});

			if(valid) {
				form.submit();
			}
		}

		function dragPick(ev) {
			ev.dataTransfer.setData("itemId",ev.target.id);
			ev.dataTransfer.setData("type","PICK");
			ev.dataTransfer.setData("leaving", $(ev.target).closest('table').attr('id'));
			ev.dataTransfer.setData("leavingDiv", $(ev.target).closest('div').attr('id'));
		}
		function dragCash(ev) {
			ev.dataTransfer.setData("itemId",ev.target.id);
			ev.dataTransfer.setData("type","CASH");
			ev.dataTransfer.setData("leaving", $(ev.target).closest('table').attr('id'));
			ev.dataTransfer.setData("leavingDiv", $(ev.target).closest('div').attr('id'));
		}
		function allowDrop(ev) {
			ev.preventDefault();
		}
		function dropIntoTrade(ev) {
			ev.preventDefault();
			
			var item = ev.dataTransfer.getData("itemId");
			var type = ev.dataTransfer.getData("type");

			var itemTeam = item.split('_')[0];
			var dropTeam = $(ev.target).closest('div').attr('team');

			var leftDiv = ev.dataTransfer.getData("leavingDiv");
			var enteringDiv = $(ev.target).closest('div').attr('id');

			if(leftDiv != "core") {
				return false;
			}

			if(leftDiv == enteringDiv) {
				return false;
			}
			if(itemTeam != dropTeam) {
				var row = $('#' + item);
				var newRow = $('#dummy' + type).clone();
				var newId = '_' + item;
				
				newRow.attr('id', newId);
				newRow.find('.text').text(row.attr('itemtext'));

				var tradeObject = {
					from : row.attr('team'),
					to : dropTeam,
					id : newId,
					itemType : type
				}

				if(type === "CASH") {
					newRow.find('input').attr('max', $('#' + item + "Value").text());
					newRow.attr('year', row.attr('year'));
					newRow.attr('cashType', row.attr('cashType'));

					tradeObject.team = row.attr('team');
					tradeObject.year = row.attr('year'); 
					tradeObject.type = row.attr('cashType');
					
				} else {
					newRow.find('.pickText').text(row.attr('itemtext'));
					
					tradeObject.originalTeam = row.attr('original_team'); 
					tradeObject.year = row.attr('year'); 
					tradeObject.round = row.attr('round');

					$('#' + item).hide();
				}
				
				$($(ev.target).closest('div').find('table')).prepend(newRow);
				tradePayload.items.push(tradeObject);
				$('.dragItemHolder').remove();
			} else {
				alert("You can't trade something to yourself");
			}
		}
		function dropOutOfTrade(ev) {
			ev.preventDefault();
			var item = ev.dataTransfer.getData("itemId");
			var left = ev.dataTransfer.getData("leaving");
			var entering = $(ev.target).closest('table').attr('id');

			if(left != entering) {
				var index = -1;
				for(var i = 0; i < tradePayload.items.length; i++) {
					if(item == tradePayload.items[i].id) {
						index = i;
					}
				}
				if(index > -1) {
					tradePayload.items.splice(index, 1);	
				}
				var oldId = item.substring(1);
				$('#' + oldId).show();
				$('#' + item).remove();
			}
		}
		
block content
	include partials/draftPicks
	include partials/teamLink
	include partials/cash

	section(id="top" style="width:600px")
		p= message

	section(id="left" style="float:left;width:20%;margin:0px")
		mixin teamLink(teamHash[from.team.teamId], true)
		p Picks
		mixin draftPicks(from.team, from.picks, "true")
		p Cash
		mixin cash(from.team, from.cash, config, true)

	section(id="center" style="width:60%;float:left;margin:0px;text-align:center")
		input(type="button" value="Submit Trade" onclick="submitTrade(" + from.team.teamId + "," + to.team.teamId + ")")
		div(id="addedTradeObjects")
			div(id='fromTradeObj' team=from.team.teamId style='vertical-align:top;display:inline-block;width:50%;min-height:400px'
				ondragover="allowDrop(event)" ondrop="dropIntoTrade(event)")
				p(style="text-align:center")= teamHash[from.team.teamId].fullName + " receives:"
				table
					tr(class="dragItemHolder")
						td Drag Items Here
			div(id='toTradeObj' team=to.team.teamId style='vertical-align:top;display:inline-block;width:50%;min-height:400px'
				ondragover="allowDrop(event)" ondrop="dropIntoTrade(event)")
				p(style="text-align:center")= teamHash[to.team.teamId].fullName + " receives:"
				table
					tr(class="dragItemHolder")
						td Drag Items Here

	section(id="right" style="float:left;width:20%;margin:0px")
		mixin teamLink(teamHash[to.team.teamId], true)
		p Picks
		mixin draftPicks(to.team, to.picks, "true")
		p Cash
		mixin cash(to.team, to.cash, config, true)

	div(style="display:none;")
		table
			tr(draggable="true" id="dummyCASH" ondragstart="dragCash(event)")
				td(class="text")
				td
					input(type="number" placeholder="0" min="0" required="required")
			tr(draggable="true" id="dummyPICK" ondragstart="dragPick(event)")
				td(class="text")
				td
					= "Swap: "
					input(type="checkbox")

	-if(tradePayload.length)
		| <script type="text/javascript" >
		| var tradePayload = !{JSON.stringify(tradePayload)}[0];
		| prepopulateOldTrade();
		| </script>