extends layout
block inlineScripts
	script.
		var tradePayload = { items : [], proposedBy : undefined, proposedTo : undefined };

		var submitTrade = function(fromTeam, toTeam) {
			tradePayload.proposedBy = fromTeam;
			tradePayload.proposedTo = toTeam;

			var form = document.createElement("form");
			form.setAttribute("method", "POST");
			form.setAttribute("action", "/trade/submit");

			var hiddenField = document.createElement("input");
			hiddenField.setAttribute("type", "hidden");
			hiddenField.setAttribute("name", "trade");
			
			form.appendChild(hiddenField);
			document.body.appendChild(form);

			var valid = true;
			tradePayload.items.forEach(function(obj) {
				if(obj.itemType == 'CASH') {
					var amount = $('#' + obj.id).find('input').val();
					if(!amount.length) {
						alert("You must enter a value to trade cash");
						valid = false;
						return false;
					} else {
						obj.amount = amount;
					}
				} else if(obj.itemType == 'PLAYER') {

				} else {
					var swap = $('#' + obj.id).find('input[type="checkbox"]').is(':checked');
					if(swap) {
						obj.swap = { swappable : true };
						//var note = $('#' + obj.id).find('input[type="text"]').val();
						//if(note.length > 0 && note !== "Enter trade specifics here") {
						//	obj.swap.note = note;
						//}
					}
				}
			});
			var tradeJson = JSON.stringify(tradePayload);
			hiddenField.setAttribute("value", tradeJson);

			if(valid) {
				form.submit();
			}
		}

		function dragPick(ev) {
			ev.dataTransfer.setData("itemId",ev.target.id);
			ev.dataTransfer.setData("type","PICK");
			ev.dataTransfer.setData("leaving", $(ev.target).closest('table').attr('id'));
			ev.dataTransfer.setData("leavingDiv", $(ev.target).closest('div').attr('id'));
		}
		function dragCash(ev) {
			ev.dataTransfer.setData("itemId",ev.target.id);
			ev.dataTransfer.setData("type","CASH");
			ev.dataTransfer.setData("leaving", $(ev.target).closest('table').attr('id'));
			ev.dataTransfer.setData("leavingDiv", $(ev.target).closest('div').attr('id'));
		}
		function dragPlayer(ev) {
			ev.dataTransfer.setData("itemId",ev.target.id);
			ev.dataTransfer.setData("type","PLAYER");
			ev.dataTransfer.setData("leaving", $(ev.target).closest('table').attr('id'));
			ev.dataTransfer.setData("leavingDiv", $(ev.target).closest('div').attr('id'));
		}
		function allowDrop(ev) {
			ev.preventDefault();
		}
		function dropIntoTrade(ev) {
			ev.preventDefault();
			
			var item = ev.dataTransfer.getData("itemId");
			var type = ev.dataTransfer.getData("type");

			var itemTeam = item.split('_')[0];
			var dropTeam = $(ev.target).closest('div').attr('team');

			var leftDiv = ev.dataTransfer.getData("leavingDiv");
			var enteringDiv = $(ev.target).closest('div').attr('id');

			if(leftDiv != "itemCatalog") {
				return false;
			}

			if(leftDiv == enteringDiv) {
				return false;
			}
			if(itemTeam != dropTeam) {
				var row = $('#' + item);
				var newRow = $('#dummy' + type).clone();
				var newId = '_' + item;
				
				newRow.attr('id', newId);
				newRow.find('.text').text(row.attr('itemtext'));

				var tradeObject = {
					from : row.attr('team'),
					to : dropTeam,
					id : newId,
					itemType : type
				}

				if(type === "CASH") {
					newRow.find('input').attr('max', $('#' + item + "Value").text());
					newRow.attr('year', row.attr('year'));
					newRow.attr('cashType', row.attr('cashType'));

					tradeObject.team = row.attr('team');
					tradeObject.year = row.attr('year'); 
					tradeObject.cashType = row.attr('cashType');
				} else if (type === "PLAYER") {
					tradeObject.team = row.attr('team');
					tradeObject.player_id = row.attr('player_id');
					tradeObject.player_name = row.attr('player_name');

					$('#' + item).hide();
				} else {
					tradeObject.originalTeam = row.attr('original_team'); 
					tradeObject.year = row.attr('year'); 
					tradeObject.round = row.attr('round');

					$('#' + item).hide();
				}
				
				$($(ev.target).closest('div').find('table')).prepend(newRow);
				tradePayload.items.push(tradeObject);
				$('.dragItemHolder').remove();
			} else {
				alert("You can't trade something to yourself");
			}
		}
		function dropOutOfTrade(ev) {
			ev.preventDefault();
			var item = ev.dataTransfer.getData("itemId");
			var left = ev.dataTransfer.getData("leaving");
			var entering = $(ev.target).closest('table').attr('id');

			if(left != entering) {
				var index = -1;
				for(var i = 0; i < tradePayload.items.length; i++) {
					if(item == tradePayload.items[i].id) {
						index = i;
					}
				}
				if(index > -1) {
					tradePayload.items.splice(index, 1);	
				}
				var oldId = item.substring(1);
				$('#' + oldId).show();
				$('#' + item).remove();
			}
		}

		function toggleSwap(button) {
			if(button.checked) {
				//$(button).parent().parent().find('input[type="text"]').css('display','');
			} else {
				//$(button).parent().parent().find('input[type="text"]').css('display','none');
			}
		}
		
block content
	include partials/cash
	include partials/draftPicks
	include partials/minorLeaguers
	include partials/teamLink

	mixin tradeCatalog(tradePartner)
		h3
			mixin teamLink(teamHash[tradePartner.team.teamId], true)
		div.widget(id="itemCatalog")
			p Minor Leaguers
			mixin minorLeaguers(tradePartner.players, tradePartner.team, config, {}, true)

		div.widget(id="itemCatalog")
			p Picks
			mixin draftPicks(tradePartner.team, tradePartner.picks, "true")
		div.widget(id="itemCatalog")
			p Cash
			mixin cash(tradePartner.team, tradePartner.cash, config, true)

	section(id="top" style="width:600px")

	section(id="left" style="float:left;width:25%;margin:0px")
		mixin tradeCatalog(from)

	mixin tradeBoard(tradePartner)
		div(style="display:inline-block;width:50%")
			p(style="text-align:center")= teamHash[tradePartner.team.teamId].fullName + " receives:"
			div.widget(team=tradePartner.team.teamId style='vertical-align:top;min-height:400px'
				ondragover="allowDrop(event)" ondrop="dropIntoTrade(event)")
				table
					tr(class="dragItemHolder")
						td Drag Items Here

	section(id="center" style="width:50%;float:left;margin:0px;text-align:center")
		input(type="button" value="Submit Trade" onclick="submitTrade(" + from.team.teamId + "," + to.team.teamId + ")")
		div(id="addedTradeObjects" style="width:100%")
			mixin tradeBoard(from)
			mixin tradeBoard(to)

	section(id="right" style="float:left;width:25%;margin:0px")
		mixin tradeCatalog(to)

	div(style="display:none;")
		table
			tr(draggable="true" id="dummyCASH" ondragstart="dragCash(event)")
				td(class="text")
				td
					input(type="number" placeholder="0" min="0" required="required")
			tr(draggable="true" id="dummyPICK" ondragstart="dragPick(event)")
				td(class="text")
				td
					= "Swap: "
					input(type="checkbox" onclick="toggleSwap(this)")
				td
					input(type="text" style="display:none" value="Enter trade specifics here")
			tr(draggable="true" id="dummyPLAYER" ondragstart="dragPlayer(event)")
				td(class="text")

	| <script type="text/javascript" >
	| var fromTeam = !{JSON.stringify(from.team)};
	| var toTeam = !{JSON.stringify(to.team)};
	| var fromPicks = !{from.jsonPicks};
	| var toPicks = !{to.jsonPicks};
	| var fromPlayers = !{from.jsonPlayers};
	| var toPlayers = !{to.jsonPlayers};
	| </script>

	//-if(tradePayload.length)		
	//	| var tradePayload = !{JSON.stringify(tradePayload)}[0];
	//	| prepopulateOldTrade();